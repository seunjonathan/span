{
	"name": "Create Prism views",
	"properties": {
		"content": {
			"query": "-- Create database if it does not exist\nIF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'silver')\nBEGIN\n    CREATE DATABASE [silver]\nEND\nGO\n\n-- USE silver\n\n\n-- Create schema if it does not exist\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'prism')\nBEGIN\n    EXEC ('CREATE SCHEMA prism;');\nEND\nGO\n\n-- Create file format if it does not exist\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'DeltaLakeFormat')\nBEGIN\n    CREATE EXTERNAL FILE FORMAT DeltaLakeFormat WITH ( FORMAT_TYPE = DELTA );\nEND\nGO\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'DeltaLakeStorage')\nBEGIN\n    CREATE EXTERNAL DATA SOURCE DeltaLakeStorage\n    WITH (\n        LOCATION = 'abfss://processed@adlssmgdev.dfs.core.windows.net'\n    )\nEND\nGO\n\n-- This script will create views for the majority of the PRISM tables names \n---------------------------------------------------------------------------\n\n-- DROP TABLE IF EXISTS #tmp_data\n\n;WITH cte_data AS (\n    SELECT * FROM (\n        VALUES\n        ('MISSES_ENERGY_CONSUMPTION'),\n        ('ADDITIONAL_FUEL_CONSUMPTION'),\n        ('TARGETS_DUAL_FUEL_ENGINE_GAS_MODE'),\n        ('TARGETS_ENERGY_CONSUMPTION'),\n        ('TARGETS_SHORE_POWER_UTILIZATION'),\n        ('STATISTICS'),\n        ('VOYAGES')    \n    ) AS t(objname)\n),\ncte_maindata AS (\n    SELECT\n        ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS rownum,\n        c.objname,\n        CASE  -- We use a case statement incase we anticipate future customizations\n            WHEN c.objname IN ('MISSES_DUAL_FUEL_ENGINE_GAS_MODE','MISSES_ENERGY_CONSUMPTION','MISSES_SHORE_POWER_UTILIZATION', 'ADDITIONAL_FUEL_CONSUMPTION',\n                                'TARGETS_DUAL_FUEL_ENGINE_GAS_MODE','TARGETS_ENERGY_CONSUMPTION','TARGETS_SHORE_POWER_UTILIZATION','STATISTICS','VOYAGES') THEN\n                CAST('CREATE OR ALTER VIEW [prism].[vw_' + c.objname + ']\n                AS SELECT *\n                FROM  \n                    OPENROWSET(\n                        BULK ''silver/PRISM/' + c.objname + ''',\n                        DATA_SOURCE = ''DeltaLakeStorage'',\n                        FORMAT=''DELTA''\n                    ) ai' AS NVARCHAR(2000))\n        END AS ViewScript\n    FROM cte_data c\n)\nSELECT *\nINTO #tmp_data\nFROM cte_maindata\n\nDECLARE @viewname NVARCHAR(1000);\nDECLARE @i INT = 1\nDECLARE @tablerecords INT = (SELECT COUNT(*) FROM #tmp_data)\n\nWHILE @i <= @tablerecords\nBEGIN\n    SELECT @viewname = ViewScript FROM #tmp_data WHERE rownum = @i\n    PRINT (@viewname)\n    EXEC (@viewname)\n    SET @i += 1;\nEND;\nGO\n\n\n-- We have some requirements to provide some times in PST. See #2392\n--------------------------------------------------------------------\n\n-- DROP VIEW [prism].[vw_MISSES_DUAL_FUEL_ENGINE_GAS_MODE]\nCREATE OR ALTER VIEW [prism].[vw_MISSES_DUAL_FUEL_ENGINE_GAS_MODE]\nAS SELECT\n    ended_at as ended_at_UTC,\n    (ended_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as ended_at_PST,\n    id,\n    leg_from_id,\n    leg_from_name,\n    leg_from_type,\n    leg_to_id,\n    leg_to_name,\n    leg_to_type,\n    properties_engine,\n    started_at as started_at_UTC,\n    (started_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as started_at_PST,\n    duration_min,\n    consumer_name,\n    fuel_amount,\n    fuel_name,\n    fuel_unit,\n    source,\n    fuel_oil_emissions,\n    target_id,\n    target_type,\n    tenant_id,\n    vessel_id,\n    voyage_number\nFROM\n    OPENROWSET(\n            BULK 'silver/PRISM/MISSES_DUAL_FUEL_ENGINE_GAS_MODE',\n            DATA_SOURCE = 'DeltaLakeStorage',\n            FORMAT='DELTA'\n    )\n    WITH (\n        ended_at DATETIME2,\n        id VARCHAR(255),\n        leg_from_id VARCHAR(255),\n        leg_from_name VARCHAR(255),\n        leg_from_type VARCHAR(255),\n        leg_to_id VARCHAR(255),\n        leg_to_name VARCHAR(255),\n        leg_to_type VARCHAR(255),\n        properties_engine VARCHAR(255),\n        started_at DATETIME2,\n        duration_min BIGINT,\n        consumer_name VARCHAR(255),\n        fuel_amount FLOAT,\n        fuel_name VARCHAR(255),\n        fuel_unit VARCHAR(255),\n        source VARCHAR(255),\n        fuel_oil_emissions FLOAT,\n        target_id VARCHAR(255),\n        target_type VARCHAR(255),\n        tenant_id VARCHAR(255),\n        vessel_id VARCHAR(255),\n        voyage_number VARCHAR(255)\n        ) \n    AS mdfegm\nGO\n\n-- DROP VIEW [prism].[vw_MISSES_SHORE_POWER_UTILIZATION]\nCREATE OR ALTER VIEW [prism].[vw_MISSES_SHORE_POWER_UTILIZATION]\nAS SELECT\n\tended_at as ended_at_UTC,\n    (ended_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as ended_at_PST,\n\tid,\n\tleg_from_id,\n\tleg_from_name,\n\tleg_from_type,\n\tleg_to_id,\n\tleg_to_name,\n\tleg_to_type,\n\tdisconnected_at as disconnected_at_UTC,\n    (disconnected_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as disconnected_at_PST,\n\tundocked_at as undocked_at_UTC,\n    (undocked_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as undocked_at_PST,\n\treasons_type,\n\tconnected_at as connected_at_UTC,\n    (connected_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as connected_at_PST,\n\tdocked_at as docked_at_UTC,\n    (docked_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as docked_at_PST,\n\tstarted_at as started_at_UTC,\n    (started_at at time zone 'UTC') AT TIME ZONE 'Pacific Standard Time' as started_at_PST,\n\tadditional_emissions,\n\tduration_min,\n\ttarget_id,\n\ttarget_type,\n\ttenant_id,\n\tvessel_id,\n\tvoyage_number\nFROM\n    OPENROWSET(\n            BULK 'silver/PRISM/MISSES_SHORE_POWER_UTILIZATION',\n            DATA_SOURCE = 'DeltaLakeStorage',\n            FORMAT='DELTA'\n    )\n    WITH (\n        ended_at DATETIME2,\n        id VARCHAR(255),\n        leg_from_id VARCHAR(255),\n        leg_from_name VARCHAR(255),\n        leg_from_type VARCHAR(255),\n        leg_to_id VARCHAR(255),\n        leg_to_name VARCHAR(255),\n        leg_to_type VARCHAR(255),\n        disconnected_at DATETIME2,\n        undocked_at DATETIME2,\n        reasons_type VARCHAR(255),\n        connected_at DATETIME2,\n        docked_at DATETIME2,\n        started_at DATETIME2,\n        additional_emissions FLOAT,\n        duration_min BIGINT,\n        target_id VARCHAR(255),\n        target_type VARCHAR(255),\n        tenant_id VARCHAR(255),\n        vessel_id VARCHAR(255),\n        voyage_number VARCHAR(255)\n        ) \n    AS mspu\n    GO\n\n\n    \n-- There is a requirement to exempt rows where statistics_generated_at is NULL. See #2235\n\nCREATE OR ALTER VIEW [prism].[vw_VOYAGES]\nAS SELECT\n    completed_at ,\n    from_port_id ,\n    id ,\n    inserted_at ,\n    number ,\n    started_at ,\n    distance ,\n    duration ,\n    running_hours_on_all_engines ,\n    running_hours_on_at_least_one_engine ,\n    total_emissions ,\n    fuel_consumer_name ,\n    fuel_source ,\n    fuel_amount ,\n    fuel_unit ,\n    energy_amount ,\n    energy_source ,\n    energy_consumer_name ,\n    twin_engines_ratio ,\n    voyage_id ,\n    statistics_generated_at ,\n    to_port_id ,\n    updated_at ,\n    vessel_id\nFROM\n    OPENROWSET(\n            BULK 'silver/PRISM/VOYAGES',\n            DATA_SOURCE = 'DeltaLakeStorage',\n            FORMAT='DELTA'\n    )\n    WITH (\n        completed_at DATETIME2,\n        from_port_id VARCHAR(255),\n        id VARCHAR(255),\n        inserted_at DATETIME2,\n        number VARCHAR(255),\n        started_at DATETIME2,\n        distance FLOAT,\n        duration BIGINT,\n        running_hours_on_all_engines FLOAT,\n        running_hours_on_at_least_one_engine FLOAT,\n        total_emissions FLOAT,\n        fuel_consumer_name VARCHAR(255),\n        fuel_source VARCHAR(255),\n        fuel_amount FLOAT,\n        fuel_unit VARCHAR(255),\n        energy_amount FLOAT,\n        energy_source VARCHAR(255),\n        energy_consumer_name VARCHAR(255),\n        twin_engines_ratio FLOAT,\n        voyage_id VARCHAR(255),\n        statistics_generated_at DATETIME2,\n        to_port_id VARCHAR(255),\n        updated_at DATETIME2,\n        vessel_id VARCHAR(255)\n        )\n    AS VOY\n    WHERE statistics_generated_at IS NOT NULL\n    GO\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "silver",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}